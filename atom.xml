<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>XinAC小筑</title>
  
  
  <link href="http://www.xinac.top/atom.xml" rel="self"/>
  
  <link href="http://www.xinac.top/"/>
  <updated>2021-10-28T10:17:23.306Z</updated>
  <id>http://www.xinac.top/</id>
  
  <author>
    <name>xinac</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>GitHug+Hexo搭建个人博客</title>
    <link href="http://www.xinac.top/2021/10/01/githug+hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <id>http://www.xinac.top/2021/10/01/githug+hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</id>
    <published>2021-10-01T08:30:22.000Z</published>
    <updated>2021-10-28T10:17:23.306Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1、新建仓库"><a href="#1、新建仓库" class="headerlink" title="1、新建仓库"></a>1、新建仓库</h3><p>在 github 新建一个仓库，仓库名必须为 <user-name>.github.io 格式，其中 <user-name> 是你 github 的昵称。</p><h3 id="2-全局安装hexo"><a href="#2-全局安装hexo" class="headerlink" title="2. 全局安装hexo"></a>2. 全局安装hexo</h3><p>全局安装 hexo。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install -g hexo</span><br></pre></td></tr></table></figure><h3 id="3-初始化项目"><a href="#3-初始化项目" class="headerlink" title="3. 初始化项目"></a>3. 初始化项目</h3><p>Just one 命令，hexo init，就会自动构建一个 hexo 项目，紧接着执行 hexo s，浏览器访问 localhost:4000 就可以看到效果</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">hexo init</span><br><span class="line"></span><br><span class="line">// 本地运行</span><br><span class="line"></span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><h3 id="4-部署到github"><a href="#4-部署到github" class="headerlink" title="4. 部署到github"></a>4. 部署到github</h3><p>在项目根目录下找到 <strong>_congif.yml</strong>，找到 deploy 字段并填写完整.这里使用git地址，因为https需要设置token，比较麻烦，这里已设置好ssh公钥。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">\#</span> <span class="string">Deployment</span></span><br><span class="line"></span><br><span class="line"><span class="string">\##</span> <span class="attr">Docs:</span> <span class="string">https://hexo.io/docs/deployment.html</span></span><br><span class="line"></span><br><span class="line"><span class="attr">deploy:</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">repo:</span> <span class="string">git@github.com:&lt;yourname&gt;/&lt;yourname&gt;.GitHub.io.git</span></span><br><span class="line"></span><br><span class="line"> <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><p>安装 <strong>hexo-deployer-git</strong>。注意，如果新建个项目，则还需安装这个插件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>执行下面两个命令，可以把项目自动部署到 github 上。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean</span><br><span class="line"></span><br><span class="line">hexo deploy</span><br></pre></td></tr></table></figure><h3 id="5、更换主题皮肤"><a href="#5、更换主题皮肤" class="headerlink" title="5、更换主题皮肤"></a>5、更换主题皮肤</h3><p>如果默认风格不喜欢，那可以去官网换之。</p><p>更换主题流程：下载主题（可以去<a href="https://hexo.io/themes/">官网</a>查看） -&gt; 配置主题，一般git仓库上有使用帮助，照着来就行。</p><p>比如这个主题：<a href="https://github.com/tufu9441/maupassant-hexo">https://github.com/tufu9441/maupassant-hexo</a></p><p>更新主题后再运行hexo g &amp;&amp; hexo d，把代码更新到github。打开自己的github地址<user-name>.github.io，就能看到新的主题样式了。</p><p><strong>常用命令</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo -g #安装Hexo</span><br><span class="line"></span><br><span class="line">npm update hexo -g #升级</span><br><span class="line"></span><br><span class="line">hexo init #初始化博客</span><br><span class="line"></span><br><span class="line">命令简写</span><br><span class="line"></span><br><span class="line">hexo n &quot;我的博客&quot; == hexo new &quot;我的博客&quot; #新建文章</span><br><span class="line"></span><br><span class="line">hexo g == hexo generate #生成</span><br><span class="line"></span><br><span class="line">hexo s == hexo server #启动服务预览</span><br><span class="line"></span><br><span class="line">hexo d == hexo deploy #部署</span><br><span class="line"></span><br><span class="line">hexo server #Hexo会监视文件变动并自动更新，无须重启服务器</span><br><span class="line"></span><br><span class="line">hexo server -s #静态模式</span><br><span class="line"></span><br><span class="line">hexo server -p 5000 #更改端口</span><br><span class="line"></span><br><span class="line">hexo server -i 192.168.1.1 #自定义 IP</span><br><span class="line"></span><br><span class="line">hexo clean #清除缓存，若是网页正常情况下可以忽略这条命令</span><br></pre></td></tr></table></figure><h3 id="6、绑定域名"><a href="#6、绑定域名" class="headerlink" title="6、绑定域名"></a><strong>6、绑定域名</strong></h3><p>虽然在Internet上可以访问我们的网站，但是网址是GitHub提供的:<a href="http://xxxx.github.io/">http://xxxx.github.io</a> ，而想使用我们自己的个性化域名，这就需要绑定我们自己的域名。去阿里云买个便宜的域名，添加解析：</p><p><img src="https://cdn.jsdelivr.net/gh/xinac0421/xinac0421.GitHub.io/img/202110281441288.png" alt="6BFE1B35-FD0A-4240-B1EB-98DFCDE79A63"></p><p>185.199.108.153是GitHub的地址，你也可以ping你的 <a href="http://xxxx.github.io/">http://xxxx.github.io</a> 的ip地址，填入进去。另一个记录类型是CNAME，CNAME的记录值是：你的用户名.<a href="http://github.io/">http://github.io</a> </p><p>第二步，登录GitHub，进入之前创建的仓库，点击settings，设置Custom domain，输入你的域名，保存。</p><p><img src="https://cdn.jsdelivr.net/gh/xinac0421/xinac0421.GitHub.io/img/202110281445062.png" alt="B6D51194-B287-4CF1-9AAF-DE5FDBCCEF3C"></p><p>第三步，进入本地博客文件夹 ，进入blog/source目录下，创建一个记事本文件，输入你的域名，保存，命名为CNAME。</p><p><img src="https://cdn.jsdelivr.net/gh/xinac0421/xinac0421.GitHub.io/img/202110281445163.png" alt="06650714-B48D-471E-9B52-B62C7D19CF5B"></p><p>最后，进入blog目录中，更新并推到github上。这时候打开浏览器在地址栏输入你的个性化域名将会直接进入你自己搭建的网站。</p>]]></content>
    
    
    <summary type="html">利用GitHug+Hexo，可以快速且免费搭建一个简单的个人博客。</summary>
    
    
    
    <category term="工具" scheme="http://www.xinac.top/categories/%E5%B7%A5%E5%85%B7/"/>
    
    
    <category term="其他" scheme="http://www.xinac.top/tags/%E5%85%B6%E4%BB%96/"/>
    
  </entry>
  
  <entry>
    <title>【Jacoco + sonarqube】测试覆盖率Android app 功能代码覆盖率实践</title>
    <link href="http://www.xinac.top/2021/06/05/Jacoco+sonarqube%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87Android_app%E5%8A%9F%E8%83%BD%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87%E5%AE%9E%E8%B7%B5/"/>
    <id>http://www.xinac.top/2021/06/05/Jacoco+sonarqube%E6%B5%8B%E8%AF%95%E8%A6%86%E7%9B%96%E7%8E%87Android_app%E5%8A%9F%E8%83%BD%E4%BB%A3%E7%A0%81%E8%A6%86%E7%9B%96%E7%8E%87%E5%AE%9E%E8%B7%B5/</id>
    <published>2021-06-05T12:11:15.000Z</published>
    <updated>2021-10-28T10:31:12.598Z</updated>
    
    <content type="html"><![CDATA[<p>为了解决没有单元测试代码，也要出具代码覆盖率的报告，故想到利用jacoco获取功能代码覆盖率，然后把该报告在sonarqube上展示即可达到目的。</p><p><strong>Jacoco：</strong></p><p>我按网上的<a href="evernote:///view/691998/s8/88345538-4906-413e-8348-a96110e10523/88345538-4906-413e-8348-a96110e10523/">教程</a>(<a href="https://testerhome.com/topics/20718">https://testerhome.com/topics/20718</a>) 配置了自己公司的项目，其中躺了些坑，记录下：</p><p>原始附件： <a href="https://cdn.jsdelivr.net/gh/xinac0421/xinac0421.GitHub.io/img/202110281815572.rar">jacoco覆盖率文件.rar</a> </p><p>1、按教程导入封装好的jacocohelper模块，然后把jacoco.gradle放入项目所在代码的那个模块里，非无脑的都是app目录下，由于我项目上的app模块只是个入口，真正的代码不在app模块下，所以按我项目，我放在了parking模块下，里面的路径也相应修改。</p><p>2、不同的不同的Gradle版本，编译后的classes目录也会不同，需要相应修改。</p><p>3、打包成apk包后，手动安装到手机里，执行后的coverage.ec文件为空，需要使用Tasks工具的install命令直接安装进手机里才行。</p><p>4、Android8.0以上的系统，coverage.ec文件为空，Android6.0的系统可以正常生成。</p><p><strong>修改后的jacoco.gradle</strong></p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line">apply plugin: &#x27;jacoco&#x27;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//Java源码路径</span><br><span class="line">def <span class="attr">coverageSourceDirs</span> = [</span><br><span class="line">        <span class="string">&#x27;../parking/src/main/java&#x27;</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//Jacoco 版本</span><br><span class="line">jacoco &#123;</span><br><span class="line">    <span class="attr">toolVersion</span> = <span class="string">&quot;0.8.5&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//以下配置均已配置好，原则上不需要有任何修改即可正常使用</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//生成报告task</span><br><span class="line">task jacocoTestReport(type: JacocoReport) &#123;</span><br><span class="line">    <span class="attr">group</span> = <span class="string">&quot;JacocoReport&quot;</span></span><br><span class="line">    <span class="attr">description</span> = <span class="string">&quot;Generate Jacoco coverage reports after running tests.&quot;</span></span><br><span class="line">    reports &#123;</span><br><span class="line">        <span class="attr">xml.enabled</span> = <span class="literal">true</span></span><br><span class="line">        <span class="attr">html.enabled</span> = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    getClassDirectories().setFrom(fileTree(</span><br><span class="line">            // classes目录按自己的项目的实际目录来，不同的Gradle版本，目录都会有所不同</span><br><span class="line">            dir: &#x27;../parking/build/intermediates/javac/debug/classes/&#x27;,</span><br><span class="line">            excludes: <span class="section">[&#x27;**/R*.class&#x27;,</span></span><br><span class="line"><span class="section">                       &#x27;**/*$InjectAdapter.class&#x27;,</span></span><br><span class="line"><span class="section">                       &#x27;**/*$ModuleAdapter.class&#x27;,</span></span><br><span class="line"><span class="section">                       &#x27;**/*$ViewInjector*.class&#x27;</span></span><br><span class="line"><span class="section">            ]</span>))</span><br><span class="line">    getSourceDirectories().setFrom(files(coverageSourceDirs))</span><br><span class="line">    getExecutionData().setFrom(files(&quot;../parking/build/outputs/code-coverage/coverage.ec&quot;))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    doFirst &#123;</span><br><span class="line">        new File(&quot;parking/build/intermediates/javac/debug/classes/&quot;).eachFileRecurse &#123; file -&gt;</span><br><span class="line">            if (file.name.contains(&#x27;$$&#x27;)) &#123;</span><br><span class="line">                file.renameTo(file.path.replace(&#x27;$$&#x27;, &#x27;$&#x27;))</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">//初始化Jacoco Task</span><br><span class="line">task jacocoInit()&#123;</span><br><span class="line">    <span class="attr">group</span> = <span class="string">&quot;JacocoReport&quot;</span></span><br><span class="line">    doFirst&#123;</span><br><span class="line">        File <span class="attr">file</span> = new File(<span class="string">&quot;./parking/build/outputs/code-coverage/&quot;</span>)</span><br><span class="line">        if (!file.exists())&#123;</span><br><span class="line">            file.mkdir()<span class="comment">;</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这样就能生成jacoco的报告，我生成的目录为”../parking/build/reports/jacoco/jacocoTestReport/jacocoTestReport.xml”</p><p><img src="https://cdn.jsdelivr.net/gh/xinac0421/xinac0421.GitHub.io/img/202110281804415.png" alt="E8D385C6-80FB-41C3-BF04-86D183BEC7C9"></p><p><strong>sonarqube：</strong></p><p>1、之后就是要把jacoco的覆盖率报告上传给sonarqube，我部署的sonarqube是Docker安装，sonarqube版本为7.9（必须为7.9，7.9以前的插件官方已不支持下载，8.x的又强制规定扫描插件所用JAVA版本为JDK11以上，7.9的只给出警告不报错，所以使用7.9版本）</p><p>2、sonarqube就绪后，在项目代码所在模块的build.gradle里添加sonarqube依赖：</p><figure class="highlight ini"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">buildscript &#123;</span><br><span class="line">  repositories &#123;</span><br><span class="line">    maven &#123;</span><br><span class="line">      url &quot;https://plugins.gradle.org/m2/&quot;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  dependencies &#123;</span><br><span class="line">    classpath &quot;org.sonarsource.scanner.gradle:sonarqube-gradle-plugin:3.1&quot;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">apply plugin: &quot;org.sonarqube&quot;</span><br></pre></td></tr></table></figure><p>3、sonarqube平台里新建项目，并在项目代码build.gradle里添加配置</p><p><img src="https://cdn.jsdelivr.net/gh/xinac0421/xinac0421.GitHub.io/img/202110281806586.png" alt="996FF93E-4E51-4D6C-AC6D-CF166DFE9392"></p><p>注意：sonar.coverage.jacoco.xmlReportPaths的路径最好是绝对路径，我试过相对路径，覆盖率一直是0，也不报错。</p><p>4、最后在项目根目录运行：./gradlew jacocoTestReport sonarqube，执行代码分析和覆盖率上传，查看平台数据</p><p><img src="https://cdn.jsdelivr.net/gh/xinac0421/xinac0421.GitHub.io/img/202110281806788.png" alt="107E8E54-7ADD-4E74-8259-F9B27A80AD4F"></p>]]></content>
    
    
    <summary type="html">为了解决没有单元测试代码，也要出具代码覆盖率的报告，故想到利用jacoco获取功能代码覆盖率，然后把该报告在sonarqube上展示即可达到目的。</summary>
    
    
    
    <category term="工作记录" scheme="http://www.xinac.top/categories/%E5%B7%A5%E4%BD%9C%E8%AE%B0%E5%BD%95/"/>
    
    
    <category term="Android" scheme="http://www.xinac.top/tags/Android/"/>
    
  </entry>
  
  <entry>
    <title>用shell脚本+jenkins做增量更新部署</title>
    <link href="http://www.xinac.top/2020/08/04/%E7%94%A8shell%E8%84%9A%E6%9C%AC+jenkins%E5%81%9A%E5%A2%9E%E9%87%8F%E6%9B%B4%E6%96%B0%E9%83%A8%E7%BD%B2/"/>
    <id>http://www.xinac.top/2020/08/04/%E7%94%A8shell%E8%84%9A%E6%9C%AC+jenkins%E5%81%9A%E5%A2%9E%E9%87%8F%E6%9B%B4%E6%96%B0%E9%83%A8%E7%BD%B2/</id>
    <published>2020-08-04T09:17:00.000Z</published>
    <updated>2021-10-29T02:21:23.517Z</updated>
    
    <content type="html"><![CDATA[<p>对应增量更新部署，网上有很多方案，比如：</p><p><a href="https://www.cnblogs.com/liuyitan/p/12191516.html">jenkins高级篇 pipeline 系列之-—06 实现自动打增量包 - 雨 燕 - 博客园</a></p><p><a href="https://juejin.im/post/6844903857546330125">Shell脚本结合Git实现增量项目部署 - 掘金</a></p><p>结合网上的方案以及公司项目架构，我最后采用简单的shell脚本方式来实现。这里记录脚本：</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#! /bin/bash</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 开始版本号</span></span><br><span class="line">start_revision=</span><br><span class="line"><span class="comment"># 截止版本号</span></span><br><span class="line">end_revision=</span><br><span class="line"><span class="comment"># 工程目录</span></span><br><span class="line">project_path=</span><br><span class="line"><span class="comment"># 增量文件输出目录</span></span><br><span class="line">out_path=<span class="variable">$PWD</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略文件后缀</span></span><br><span class="line">ignoreFile=<span class="string">&quot;sql,sh,groovy,gdsl&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 忽略的路径(需填写相对应工程目录的相关路径)</span></span><br><span class="line">ignorePath=<span class="string">&quot;config/,doc/,logs/,tools/,shell/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># </span></span><br><span class="line"><span class="comment"># 生成class文件所在路径(相对应工程目录)</span></span><br><span class="line">default_target_paths=target/classes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># class需要包括复制到目标目录</span></span><br><span class="line">default_webInfo_classes_paths=WEB-INF/classes</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 静态文件目录</span></span><br><span class="line">default_content_paths=WebContent</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># java文件后缀名</span></span><br><span class="line">default_java_file=java</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">readme=<span class="string">&quot;工具描述：比较svn两个revision版本的差异，自动把差异的文件和文件路径拷贝到指定目录。</span></span><br><span class="line"><span class="string">参数列表：</span></span><br><span class="line"><span class="string">    -p (必选:有参数) 工程目录，运行svn命令和文件拷贝的目录。注意，必须在本地已通过svn获取到工程代码</span></span><br><span class="line"><span class="string">    -s (必选:有参数) svn revision 的开始版本号。注意，截止版本号默认为-p参数路径下的revision版本号，请确保路径正确且已更新最新代码。</span></span><br><span class="line"><span class="string">    -e (可选:有参数) svn revision 的截止版本号。可不填，不填默认为最新版本号</span></span><br><span class="line"><span class="string">    -o (可选:有参数) 文件拷贝的输出目录，会自动在该目标目录下创建时间戳临时目录，若不填，则默认在当前目录输出。</span></span><br><span class="line"><span class="string">    -i (可选:有参数) 表示需要忽略的文件后缀，多个后缀之间用逗号隔开。不填默认为sql,sh,groovy,gdsl</span></span><br><span class="line"><span class="string">    -t (可选:有参数) 表示需要忽略的路径，多个路径之间用逗号隔开，这里的路径是相对与工程目录的路径。不填默认为config/,doc/,logs</span></span><br><span class="line"><span class="string">    -j (可选:无参数) 是否要保存原始差异文件(非编译后的class文件，为了后面jacoco做准备)，默认不报存</span></span><br><span class="line"><span class="string">    -h 帮助说明</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">示例：</span></span><br><span class="line"><span class="string">    ./vnDiffAndCopyFile.sh -p /Users/wangxin/Documents/CODE/Innotek/SPMS/NewSpms -s 10520</span></span><br><span class="line"><span class="string">&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取最新的svn版本</span></span><br><span class="line"><span class="function"><span class="title">getSvnEndRevision</span></span>()&#123;</span><br><span class="line">    <span class="keyword">if</span> [ ! <span class="variable">$&#123;end_revision&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">        end_revision=$(<span class="built_in">cd</span> <span class="variable">$1</span>; svn info --show-item revision)</span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="built_in">getopts</span> <span class="string">&quot;p:s:o:e:i:jh&quot;</span> arg <span class="comment">#选项后面的冒号表示该选项需要参数</span></span><br><span class="line"><span class="keyword">do</span> </span><br><span class="line">    <span class="keyword">case</span> <span class="variable">$arg</span> <span class="keyword">in</span></span><br><span class="line">        s)    </span><br><span class="line">            start_revision=<span class="variable">$OPTARG</span></span><br><span class="line">            ;;</span><br><span class="line">        p)    <span class="comment">#参数存在$OPTARG中</span></span><br><span class="line">            project_path=<span class="variable">$OPTARG</span></span><br><span class="line">             <span class="keyword">if</span> [ ! -d <span class="string">&quot;<span class="variable">$&#123;project_path&#125;</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;错误：工程路径不存在(<span class="variable">$&#123;project_path&#125;</span>)&quot;</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            getSvnEndRevision <span class="variable">$&#123;project_path&#125;</span></span><br><span class="line">            ;;</span><br><span class="line">        o)</span><br><span class="line">            out_path=<span class="variable">$OPTARG</span></span><br><span class="line">            <span class="keyword">if</span> [ ! -d <span class="string">&quot;<span class="variable">$&#123;out_path&#125;</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">                <span class="built_in">echo</span> <span class="string">&quot;错误：目标路径不存在(<span class="variable">$&#123;out_path&#125;</span>)&quot;</span></span><br><span class="line">                <span class="built_in">exit</span> 1</span><br><span class="line">            <span class="keyword">fi</span></span><br><span class="line">            ;;</span><br><span class="line">        e)</span><br><span class="line">            end_revision=<span class="variable">$OPTARG</span></span><br><span class="line">            ;;</span><br><span class="line">        i)</span><br><span class="line">            ignoreFile=<span class="variable">$OPTARG</span></span><br><span class="line">            ;;</span><br><span class="line">        t)</span><br><span class="line">            ignorePath=<span class="variable">$OPTARG</span></span><br><span class="line">            ;;</span><br><span class="line">        j)    </span><br><span class="line">            <span class="comment"># 是否保存java文件</span></span><br><span class="line">            isSaveJava=<span class="literal">true</span></span><br><span class="line">            ;;</span><br><span class="line">        h)</span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;readme&#125;</span>&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">            ;;</span><br><span class="line">        ?)  <span class="comment">#当有不认识的选项的时候arg为?</span></span><br><span class="line">            <span class="built_in">echo</span> <span class="string">&quot;参数错误 如需帮助请输入参数 -h&quot;</span></span><br><span class="line">            <span class="built_in">exit</span> 1</span><br><span class="line">            ;;</span><br><span class="line">    <span class="keyword">esac</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! <span class="variable">$&#123;start_revision&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;错误：起始版本号未输入！ 请输入 -s 参数. 示例可见 -h 参数&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! <span class="variable">$&#123;project_path&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;错误：工程目录未输入！ 请输入 -p 参数指定具体工程目录. 示例可见 -h 参数&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! $(grep <span class="string">&#x27;^[[:digit:]]*$&#x27;</span> &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$&#123;start_revision&#125;</span>&quot;</span>) ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;起始版本号不能为非数字：<span class="variable">$&#123;start_revision&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> [ ! $(grep <span class="string">&#x27;^[[:digit:]]*$&#x27;</span> &lt;&lt;&lt; <span class="string">&quot;<span class="variable">$&#123;end_revision&#125;</span>&quot;</span>) ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;结束版本号不能为非数字：<span class="variable">$&#123;end_revision&#125;</span>&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 进行svndiff操作</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;起始版本号：<span class="variable">$&#123;start_revision&#125;</span>&quot;</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;截止版本号：<span class="variable">$&#123;end_revision&#125;</span>&quot;</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;start_revision&#125;</span> -ge <span class="variable">$&#123;end_revision&#125;</span> ]; <span class="keyword">then</span> </span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;结果：版本无差异！&quot;</span></span><br><span class="line">    <span class="built_in">exit</span> 1</span><br><span class="line"><span class="keyword">fi</span> </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------ 把差异的文件复制到相应文件夹中 ------</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 切换到工程目录</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$&#123;project_path&#125;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取diff文件列表</span></span><br><span class="line"><span class="comment"># 如果有需要忽略的后缀文件，则先忽略到该后缀名的文件</span></span><br><span class="line"><span class="keyword">if</span> [ ! <span class="variable">$&#123;ignoreFile&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 起始版本号减1,为了包含该版本号</span></span><br><span class="line">    temp_files=$(svn diff -r$(( start_revision-<span class="number">1</span> )):<span class="variable">$&#123;end_revision&#125;</span> | grep Index: | sed -E <span class="string">&#x27;s#Index: ##g&#x27;</span>)</span><br><span class="line">    <span class="comment">#temp_files=$(svn diff -r$&#123;start_revision&#125;:$&#123;end_revision&#125; --summarize --no-auth-cache | awk &#x27;&#123;print $2&#125;s&#x27;) # 该命令会输出提交的文件夹路径(不采纳)</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">    <span class="comment"># 把过滤的文件去除</span></span><br><span class="line">    ignoreFile=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;ignoreFile&#125;</span>&quot;</span> | sed -E <span class="string">&#x27;s#,#|#g&#x27;</span>) <span class="comment"># ,换成|</span></span><br><span class="line">    temp_files=$(svn diff -r$(( start_revision-<span class="number">1</span> )):<span class="variable">$&#123;end_revision&#125;</span> | grep Index: | sed -E <span class="string">&#x27;s#Index: ##g&#x27;</span> | grep -E -v <span class="string">&quot;(<span class="variable">$&#123;ignoreFile&#125;</span>)$&quot;</span> )</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 过滤掉目录下的所有文件</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;ignorePath&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    ignorePath=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;ignorePath&#125;</span>&quot;</span> | sed -E <span class="string">&#x27;s#,#|#g&#x27;</span>) <span class="comment"># ,换成|</span></span><br><span class="line">    temp_files=$(<span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;temp_files&#125;</span>&quot;</span> | grep -E -v <span class="string">&quot;^(<span class="variable">$&#123;ignorePath&#125;</span>)&quot;</span>)</span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 增量文件复制</span></span><br><span class="line"><span class="built_in">cd</span> <span class="variable">$out_path</span></span><br><span class="line">pathName=$(date <span class="string">&quot;+%Y%m%d%H%M%S&quot;</span>)  <span class="comment"># 目录起始名</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 是否要保存java文件</span></span><br><span class="line"><span class="keyword">if</span> [ <span class="variable">$&#123;isSaveJava&#125;</span> ]; <span class="keyword">then</span></span><br><span class="line">    <span class="comment"># 读取每一行，创建目录,统一放在for_java目录下</span></span><br><span class="line">    <span class="comment"># PS: echo 后的变量尽量加引号，不加引号不会变量里的字符串的换行符换成空格</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;temp_files&#125;</span>&quot;</span> | <span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span> mkdir -p <span class="variable">$&#123;pathName&#125;</span>/for_java/$(dirname <span class="variable">$line</span>);<span class="keyword">done</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment"># 复制差异文件(原始文件)</span></span><br><span class="line">    <span class="built_in">cd</span> <span class="variable">$&#123;project_path&#125;</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;temp_files&#125;</span>&quot;</span> | <span class="keyword">while</span> <span class="built_in">read</span> line; <span class="keyword">do</span> cp -af <span class="variable">$&#123;line&#125;</span> <span class="variable">$&#123;out_path&#125;</span>/<span class="variable">$&#123;pathName&#125;</span>/for_java/$(dirname <span class="variable">$line</span>);<span class="keyword">done</span></span><br><span class="line"><span class="keyword">fi</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># ------ 开始保存增量文件(class文件和其他静态文件) ------</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;temp_files&#125;</span>&quot;</span> | <span class="keyword">while</span> <span class="built_in">read</span> line </span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">    <span class="comment">#src_path=$&#123;line%/*&#125;</span></span><br><span class="line">    file_name=<span class="variable">$&#123;line##*/&#125;</span> <span class="comment"># test.txt</span></span><br><span class="line">    file_type=<span class="variable">$&#123;file_name##*.&#125;</span> <span class="comment"># txt</span></span><br><span class="line">    file_class_name=<span class="variable">$&#123;file_name%.*&#125;</span> <span class="comment"># test</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    first_path_name=<span class="variable">$&#123;line%%/*&#125;</span> <span class="comment"># src</span></span><br><span class="line">    <span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$&#123;first_path_name&#125;</span>&quot;</span></span><br><span class="line">    <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;first_path_name&#125;</span>&quot;</span> = <span class="string">&quot;src&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">        file_target_src_path=$(<span class="built_in">echo</span> <span class="variable">$&#123;line&#125;</span> | awk -F <span class="string">&#x27;src/&#x27;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) <span class="comment"># 去掉&quot;src/&quot;后，保留右边的文件路径</span></span><br><span class="line">        dir_target_src_path=$(dirname <span class="variable">$file_target_src_path</span>) <span class="comment"># 去掉文件名的路径</span></span><br><span class="line">        <span class="built_in">cd</span> <span class="variable">$&#123;out_path&#125;</span></span><br><span class="line">        mkdir -p <span class="variable">$&#123;pathName&#125;</span>/for_build/<span class="variable">$&#123;default_webInfo_classes_paths&#125;</span>/<span class="variable">$&#123;dir_target_src_path&#125;</span></span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> [[ <span class="variable">$&#123;file_type&#125;</span> = <span class="variable">$&#123;default_java_file&#125;</span> ]]; <span class="keyword">then</span></span><br><span class="line">            <span class="comment"># 如果是java文件，则需从target目录下拷贝class文件到目标目录</span></span><br><span class="line">            <span class="built_in">cd</span> <span class="variable">$&#123;project_path&#125;</span></span><br><span class="line">            <span class="comment"># 这里使用*通配符匹配文件，可以把内部类的编译文件也找到</span></span><br><span class="line">            cp -af <span class="variable">$&#123;default_target_paths&#125;</span>/<span class="variable">$&#123;dir_target_src_path&#125;</span>/<span class="variable">$&#123;file_class_name&#125;</span>* <span class="variable">$&#123;out_path&#125;</span>/<span class="variable">$&#123;pathName&#125;</span>/for_build/<span class="variable">$&#123;default_webInfo_classes_paths&#125;</span>/<span class="variable">$&#123;dir_target_src_path&#125;</span></span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="comment"># 如果不是java文件，但又在src目录下的，则直接拷贝到目标目录</span></span><br><span class="line">            <span class="built_in">cd</span> <span class="variable">$&#123;project_path&#125;</span></span><br><span class="line">            cp -af <span class="variable">$&#123;line&#125;</span> <span class="variable">$&#123;out_path&#125;</span>/<span class="variable">$&#123;pathName&#125;</span>/for_build/<span class="variable">$&#123;default_webInfo_classes_paths&#125;</span>/<span class="variable">$&#123;dir_target_src_path&#125;</span></span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">        <span class="keyword">if</span> [ <span class="string">&quot;<span class="variable">$&#123;first_path_name&#125;</span>&quot;</span> = <span class="string">&quot;<span class="variable">$&#123;default_content_paths&#125;</span>&quot;</span> ]; <span class="keyword">then</span></span><br><span class="line">            <span class="comment"># 如果是WebContent目录下的文件</span></span><br><span class="line">            file_to_copy_path=$(<span class="built_in">echo</span> <span class="variable">$&#123;line&#125;</span> | awk -F <span class="string">&quot;<span class="variable">$&#123;default_content_paths&#125;</span>/&quot;</span> <span class="string">&#x27;&#123;print $2&#125;&#x27;</span>) <span class="comment"># 去掉&quot;WebContent/&quot;后，保留右边的文件路径</span></span><br><span class="line">            <span class="built_in">cd</span> <span class="variable">$&#123;out_path&#125;</span></span><br><span class="line">            mkdir -p <span class="variable">$&#123;pathName&#125;</span>/for_build/$(dirname <span class="variable">$file_to_copy_path</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">            <span class="built_in">cd</span> <span class="variable">$&#123;project_path&#125;</span></span><br><span class="line">            cp -af <span class="variable">$&#123;line&#125;</span> <span class="variable">$&#123;out_path&#125;</span>/<span class="variable">$&#123;pathName&#125;</span>/for_build/$(dirname <span class="variable">$file_to_copy_path</span>)</span><br><span class="line">        <span class="keyword">fi</span></span><br><span class="line">    <span class="keyword">fi</span></span><br><span class="line"><span class="keyword">done</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 保存差异文件信息到文件</span></span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# 工程目录：<span class="variable">$&#123;project_path&#125;</span> ; 开始版本号：<span class="variable">$&#123;start_revision&#125;</span>, 截止版本号: <span class="variable">$&#123;end_revision&#125;</span>; 创建时间: <span class="subst">$(date <span class="string">&quot;+%Y-%m-%d %H:%M:%S&quot;</span>)</span>&quot;</span> &gt; <span class="variable">$out_path</span>/<span class="variable">$pathName</span>/patch.text</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;# ------ 以下为差异文件列表 ------&quot;</span> &gt;&gt; <span class="variable">$out_path</span>/<span class="variable">$pathName</span>/patch.text</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&quot;<span class="variable">$temp_files</span>&quot;</span> &gt;&gt; <span class="variable">$out_path</span>/<span class="variable">$pathName</span>/patch.text</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">公司的产品虽然架构很简单，但每次更新部署都需要手动操作，增量更新还容易漏文件，故想到用自动化的方式处理。</summary>
    
    
    
    <category term="测试" scheme="http://www.xinac.top/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
    <category term="jenkins" scheme="http://www.xinac.top/tags/jenkins/"/>
    
  </entry>
  
</feed>
